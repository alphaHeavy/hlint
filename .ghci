:set -fno-warn-overlapping-patterns -fwarn-unused-binds -fwarn-unused-imports
:set -isrc;.
:load Main

:def test const $ return ":main --test"
:def self const $ return ":main src --report --hint=data/HLint_Hints.hs"
:def gen const $ return ":!runhaskell data\\HLint_Gen.hs"

:{
:def hpc const $ return $ unlines
    [":!mkdir .hpc"
    ,":!ghc --make -isrc -i. src/Main.hs -w -fhpc -odir .hpc -hidir .hpc -threaded -o .hpc/hlint-test"
    ,":!del hlint-test.tix"
    ,":!.hpc\\hlint-test --help"
    ,":!.hpc\\hlint-test --test"
    ,":!.hpc\\hlint-test src --report=.hpc\\hlint-test-report.html +RTS -N3"
    ,":!.hpc\\hlint-test data --report=.hpc\\hlint-test-report.html +RTS -N3"
    ,":!hpc.exe markup hlint-test.tix --destdir=.hpc"
    ,":!hpc.exe report hlint-test.tix"
    ,":!del hlint-test.tix"
    ,":!start .hpc\\hpc_index_fun.html"]
:}

:{
:def prof \x ->
    let level = if x == "" then "1" else x ;
        dir = ".hpc\\prof" ++ level
    in if level `notElem` ["0","1","2"] then putStrLn "Error: argument to prof must be a number 0-2." >> return "" else
    return $ unlines
        [":!mkdir .hpc"
        ,":!mkdir " ++ dir
        ,":!ghc --make -isrc -i. src/Main.hs -w -odir "++dir++" -hidir "++dir++" -o "++dir++"/hlint -O"++level++" -prof -auto-all -caf-all"
        ,":!"++dir++"\\hlint src +RTS -p"
        ]
:}

:{
:def bench \x -> return $ unlines
    [":!mkdir .hpc"
    ,":!mkdir .hpc\\bench"
    ,":!ghc --make -isrc -i. src/Main.hs -w -odir .hpc/bench -hidir .hpc/bench -o .hpc/bench/hlint -O"
    ,":!.hpc\\bench\\hlint src +RTS -s"
    ]
:}
